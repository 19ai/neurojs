<!DOCTYPE html>
<html>
<head>
	<title></title>
	<style>
		html,body {
		    margin:0;
		    padding:0;
		    width:100%;
		    height:100%;
		}

		.description {
			padding: 0 20px;
		}
	</style>
	<meta name="viewport" content="width=device-width, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0">
</head>
<body>
	<div class="description">
		<p>This demo is about self-learning cars. The reinforcement-learning-goal of these cars is to maximize their future speed at all times, which means to avoid shapes. The input to the cars' neural network is the sensor data: speed in x- and y-direction, distance + entity type + normal vector (2d) of sensing rays (19 per car). In addition to the current time-step they receive the last action-state pair. Each state has 19x4 + 2 = 78 dimensions. The action space is 2 dimensional, which means the input to the car's brain is 78x2 + 2 = 158 dimensional. </p>
		<p>This page uses the DDPG (deep deterministic policy gradient) algorithm, which means the action space is continuous. 1d for speed control (gas pedal, -1 for braking/going backwards, +1 for max thrust in forward direction) and 1d for stearing (-1 left, 0 straight, +1 right). </p>
		<p><strong>Click and drag to draw shapes, which must be avoided by the cars.</strong></p>
		<button onclick="window.gcd.goSlow();">Go slow</button>
		<button onclick="window.gcd.goFast();">Go fast</button><br>
		<input type='file' accept='*/*' onchange='readBrain(event)'><br>
		<p>Agent's lifespan: <span id="agent-age">0</span>s</p>
	</div>

	<div id="container" style="width: 100%; max-width: 1200px; margin: 0 auto"></div>

	<script type="text/javascript" src="vendor/p2.min.js"></script> <!-- physics lib -->
	<script type="text/javascript" src="vendor/pixi.min.js"></script> <!-- WebGL renderer -->
	<script type="text/javascript" src="../../build/neurojs-v2.js"></script>  <!-- brain lib :P -->
	<script type="text/javascript" src="bundle.js"></script> <!-- app -->
</body>
</html>